import yfinance as yf
from sqlalchemy import create_engine

mysql_user = os.getenv('MYSQL_USER')
mysql_pass = os.getenv('MYSQL_PASSWORD')
mysql_host = os.getenv('MYSQL_HOST')
database_name = os.getenv('MYSQL_DATABASE')

engine_uri = f"mysql+pymysql://{mysql_user}:{mysql_pass}@{mysql_host}/{database_name}"
engine = create_engine(engine_uri)

eLIST = [] 
TICK = []

SQL_getSymbol = "SELECT distinct Symbol FROM `PriceHistorical` group by Symbol having max(`Date`) < DATE_SUB(CURDATE(), INTERVAL 3 DAY)"
with engine.connect() as connection:
    result = connection.execute( SQL_getSymbol )
    for row in result:
        TICK.append(row[0])
print(len(TICK))

def Feed(TICKER):
    symbol = TICKER
    try :
        ticker = yf.Ticker(symbol).history(period="1mo")
        SQLstr = "INSERT IGNORE INTO `PriceHistorical` ( `Symbol`, `Date`, `Open`, `High`, `Low`, `Close`, `Vol`) VALUES ( "
        with engine.connect() as connection:
            for item , row in ticker.iterrows():
                SQL =  f" {SQLstr} '{symbol}', '{item.date()}',  {round(row[0] , 3 )}, {round(row[1],3)}, {round(row[2],3)}, {round(row[3],3)}, {int(row[4])}" + ");"
                result = connection.execute( SQL )
        print(f"FOUND: {symbol}")        
                    
    except Exception as e:
        print(f"NOT found: {symbol}")
        eLIST.append(symbol)
        exit

for T in TICK:
    Feed(T)

with open('FaileTickers.txt', 'w') as f:
    for line in eLIST:
        f.write(f"{line}\n")

